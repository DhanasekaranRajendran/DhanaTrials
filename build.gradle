buildscript {
    ext {
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'org.springframework.boot' version '2.1.7.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'groovy'
}

group = 'com.target.myretail'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

bootJar{
    baseName('product-api')
    version('0.0.1-SNAPSHOT')
}
repositories {
    maven { url "http://repo.maven.apache.org/maven2" }
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-actuator',
            'org.springframework.boot:spring-boot-starter-data-jpa',
            'org.springframework.boot:spring-boot-starter-security',
            'org.springframework.boot:spring-boot-starter-web',
            'org.springframework.boot:spring-boot-starter-data-mongodb',
            'io.springfox:springfox-swagger2:2.8.0',
            'io.springfox:springfox-swagger-ui:2.8.0',
            'org.projectlombok:lombok')
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation(
            'org.springframework.boot:spring-boot-starter-test',
            'org.codehaus.groovy:groovy-all:2.4.7',
            'org.spockframework:spock-core:1.1-groovy-2.4',
            'org.spockframework:spock-spring:1.1-groovy-2.4',
            'de.flapdoodle.embed:de.flapdoodle.embed.mongo:2.0.3',
            'cglib:cglib-nodep:3.2.4',
            'org.projectlombok:lombok'
    )
}

sourceSets {
    test {
        java.srcDirs = ['src/test/groovy']
    }
    integration {
        java.srcDirs = ['src/test/groovy/intg']
        resources.srcDirs = ['src/test/resources']
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

configurations {
    integrationCompile.extendsFrom testCompile
    integrationRuntime.extendsFrom testRunTime
}

task integration(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
    testClassesDirs = sourceSets.integration.output.classesDirs
    classpath = sourceSets.integration.runtimeClasspath
}